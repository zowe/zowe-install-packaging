{
  "node": {
    "https": {
      "ipAddresses": ["0.0.0.0"],
      "port": 8544,
      //pfx (string), keys, certificates, certificateAuthorities, and certificateRevocationLists are all valid here.
      "keys": ["../defaults/serverConfig/zlux.keystore.key"],
      "certificates": ["../defaults/serverConfig/zlux.keystore.cer"],
      "certificateAuthorities": ["../defaults/serverConfig/apiml-localca.cer"]
    },
    "mediationLayer": {
      "server": {
        "hostname": "localhost",
        "port": 7554,
        "isHttps": true
      },
      //environmentally set to true when apiml available
      "enabled": false
    },
    "headers": {
      "X-frame-Options": {
        "override": true,
        "value": "sameorigin"
      }
    }
  },
  "agent": {
    //host is for zlux to know, not zss
    "host": "localhost",
    "jwt": {
      "token": {
        "name": "",
        "label": ""
      },
      "fallback": true
    },
    "https": {
      "ipAddresses": ["127.0.0.1"],
      //to be a replacement for zssPort
      "port": 8542
    },
    "mediationLayer": {
      "serviceName": "zss",
      //environmentally set to true when apiml available
      "enabled": false
    }
  },
  //Zowe cross memory server name
  "privilegedServerName": "ZWESIS_STD",

// All paths relative to ZLUX/node or ZLUX/bin
// In real installations, these values will be configured during the install.
  "productDir":"../defaults",
  "siteDir":"../deploy/site",
  "instanceDir":"../deploy/instance",
  "groupsDir":"../deploy/instance/groups",
  "usersDir":"../deploy/instance/users",
  "pluginsDir":"../defaults/plugins",

  "dataserviceAuthentication": {
    //this specifies the default authentication type for dataservices that didn't specify which type to use. These dataservices therefore should not expect a particular type of authentication to be used.
    "defaultAuthentication": "saf",
    //enable this to use role-based access control (RBAC) for Zowe dataservice endpoints
    "rbac": false,
    
    //each authentication type may have more than one implementing plugin, but the specification below just describes the priority of them. Every one that is found in the pluginsDir is loaded.
    "implementationDefaults": {
      //each type has an object which describes which implementation to use based on some criteria to find which is best for the task. For now, just "plugins" will
      //be used to state that you want a particular plugin.
      "saf": {
        "plugins": ["org.zowe.zlux.auth.safsso"]
      }
      
    }
  },
  "logLevels": {
    "_zss.jwtTrace": 5
  }
}

//ZWENOSEC JOB {zowe.environments.jclHeader}
//*
//* This program and the accompanying materials are made available
//* under the terms of the Eclipse Public License v2.0 which
//* accompanies this distribution, and is available at
//* https://www.eclipse.org/legal/epl-v20.html
//*
//* SPDX-License-Identifier: EPL-2.0
//*
//* Copyright Contributors to the Zowe Project. 2018, 2020
//*
//*********************************************************************
//*
//* Zowe Open Source Project
//* This JCL can be used to remove security permits for Zowe
//*
//*
//* CAUTION: This is neither a JCL procedure nor a complete job.
//* Before using this JCL, you will have to make the following
//* modifications:
//*
//* 1) Add job name and job parameters to the JOB statement, to
//*    meet your system requirements.
//*
//* 2) Customize the commands in the DD statement that matches your
//*     security product so that they meet your system requirements.
//*
//* Note(s):
//*
//* 1. THE USER ID THAT RUNS THIS JOB MUST HAVE SUFFICIENT AUTHORITY
//*    TO ALTER SECURITY DEFINITONS
//*
//* 2. Remove users from the Zowe administrator group before removing
//*    the group itself.
//*
//* 3. This job WILL complete with return code 0.
//*    The results of each command must be verified after completion.
//*
//*********************************************************************
//         EXPORT SYMLIST=*
//*
//* Top Secret ONLY -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
//*                     12345678
//         SET ADMINDEP=SYSPDEPT     * department owning admin group
//         SET  ZOWEDEP=             * department owning Zowe resources
//*                     12345678
//*
//* end Top Secret ONLY -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
//*
//*********************************************************************
//*
//* EXECUTE COMMANDS FOR SELECTED SECURITY PRODUCT
//*
//RUN      EXEC PGM=IKJEFT01,REGION=0M
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DDNAME={zowe.setup.security.product}
//*
//*********************************************************************
//*
//* RACF ONLY, customize to meet your system requirements
//*
//RACF     DD DATA,DLM=$$,SYMBOLS=JCLONLY

/* REMOVE ZOWE DATA SET PROTECTION ................................. */

/* - The sample commands assume that EGN (Enhanced Generic Naming)   */
/*   is active, which allows the usage of ** to represent any number */
/*   of qualifiers in the DATASET class. Substitute *.** with * if   */
/*   EGN is not active on your system.                               */

/* remove general data set protection                                */
  LISTDSD PREFIX({zowe.setup.datasets.prefix}) ALL
  PERMIT '{zowe.setup.datasets.prefix}.*.**' CLASS(DATASET) +
         DELETE ID({zowe.setup.security.groups.sysProg})
  DELDSD '{zowe.setup.datasets.prefix}.*.**'

/* remove HLQ stub                                                   */
  LISTGRP  {zowe.setup.datasets.prefix}.
  DELGROUP {zowe.setup.datasets.prefix}.

  SETROPTS GENERIC(DATASET) REFRESH

/* REMOVE ZOWE SERVER PERMISIONS ................................... */

/* remove permit to use ZIS                                          */
  RLIST  FACILITY ZWES.IS ALL
  PERMIT ZWES.IS CLASS(FACILITY) +
         DELETE ID({zowe.setup.security.users.zowe})

/* remove permit to create a user's security environment             */
  RLIST  FACILITY BPX.DAEMON ALL
  PERMIT BPX.DAEMON CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zowe})

  RLIST  FACILITY BPX.SERVER ALL
  PERMIT BPX.SERVER CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zowe})

  PERMIT OMVSAPPL CLASS(APPL) DELETE +
         ID({zowe.setup.security.users.zowe})

/* remove permit to set jobname                                      */
  RLIST  FACILITY BPX.JOBNAME ALL
  PERMIT BPX.JOBNAME CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zowe})

/* remove permit to write persistent data                            */
  RLIST  UNIXPRIV SUPERUSER.FILESYS ALL
  PERMIT SUPERUSER.FILESYS CLASS(UNIXPRIV) DELETE +
         ID({zowe.setup.security.users.zowe})

/* remove permit to use client certificate mapping service           */
  PERMIT IRR.RUSERMAP CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zowe})

/* remove permit to use distributed identity mapping service         */
  PERMIT IRR.IDIDMAP.QUERY CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zowe})

/* remove permit Zowe main server to cut SMF records                 */
  PERMIT IRR.RAUDITX CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zowe})

  SETROPTS RACLIST(FACILITY) REFRESH
  SETROPTS RACLIST(UNIXPRIV) REFRESH

/* REMOVE AUX SERVER PERMISIONS .................................... */

/* remove permit to use ZIS                                          */
  RLIST  FACILITY ZWES.IS ALL
  PERMIT ZWES.IS CLASS(FACILITY) DELETE +
         ID({zowe.setup.security.users.zis})

/* REMOVE STARTED TASKS ............................................ */

/* remove userid for ZOWE main server                                */
  LISTUSER {zowe.setup.security.users.zowe}. OMVS
  DELUSER  {zowe.setup.security.users.zowe}.

/* remove userid for ZIS                                             */
  LISTUSER {zowe.setup.security.users.zis}. OMVS
  DELUSER  {zowe.setup.security.users.zis}.

/* comment out if {zowe.setup.security.groups.stc} matches           */
/* {zowe.setup.security.groups.admin} (default), expect              */
/*   warning messages otherwise                                      */
/* remove group for started tasks                                    */
  LISTGRP  {zowe.setup.security.groups.stc}. OMVS
  DELGROUP {zowe.setup.security.groups.stc}.

/* remove started task for ZOWE main server                          */
  RLIST   STARTED {zowe.setup.security.stcs.zowe}.* ALL STDATA
  RDELETE STARTED {zowe.setup.security.stcs.zowe}.*

/* remove started task for ZIS                                       */
  RLIST   STARTED {zowe.setup.security.stcs.zis}.* ALL STDATA
  RDELETE STARTED {zowe.setup.security.stcs.zis}.*

/* remove started task for ZIS Auxiliary server                      */
  RLIST   STARTED {zowe.setup.security.stcs.aux}.* ALL STDATA
  RDELETE STARTED {zowe.setup.security.stcs.aux}.*

  SETROPTS RACLIST(STARTED) REFRESH

/* REMOVE ADMINISTRATORS ........................................... */

/* uncomment to remove user IDs from                                 */
/* the {zowe.setup.security.groups.admin} group                      */
/* REMOVE (userid,userid,...)                                        */
/* GROUP({zowe.setup.security.groups.admin})                        */

/* remove group for administrators                                   */
  LISTGRP  {zowe.setup.security.groups.admin}. OMVS
  DELGROUP {zowe.setup.security.groups.admin}.

/* REMOVE ZOWE RESOURCE CLASS ...................................... */
/* uncomment commands to below if the ZOWE class has been created    */
/* by the ZWESECUR job                                               */

/* remove profile in ZOWE class                                      */
/* RDELETE ZOWE APIML.SERVICES                                       */
/* remove ZOWE class                                                 */
/* RDELETE CDT ZOWE                                                  */

  SETROPTS RACLIST(CDT) REFRESH

/* ................................................................. */
/* only the last RC is returned, this command ensures it is a 0      */
PROFILE
$$
//*
//*********************************************************************
//*
//* ACF2 ONLY, customize to meet your system requirements
//*
//ACF2     DD DATA,DLM=$$,SYMBOLS=JCLONLY
ACF
*
* DELETE ADMINISTRATORS ...........................................
*
* group for administrators
*
SET PROFILE(GROUP) DIV(OMVS)
DELETE {zowe.setup.security.groups.admin}.
F ACF2,REBUILD(GRP),CLASS(P)
*
*
SET LID
SET PROFILE(USER) DIV(OMVS)
DELETE {zowe.setup.security.users.zowe}.
F ACF2,REBUILD(USR),CLASS(P),DIVISION(OMVS)
*
SET LID
SET PROFILE(USER) DIV(OMVS)
DELETE {zowe.setup.security.users.zis}.
F ACF2,REBUILD(USR),CLASS(P),DIVISION(OMVS)
*
* remove userid for ZOWE main server (ZISSTC,AUXSTC have same user id)
SET LID
LIST {zowe.setup.security.users.zowe}
DELETE {zowe.setup.security.users.zowe}.
*
*
* remove userid for ZIS                                              */
SET LID
LIST {zowe.setup.security.users.zis}
DELETE {zowe.setup.security.users.zis}.
*
*
*****
*
* Delete  task for ZOWE main server
*
SET CONTROL(GSO)
LIST LIKE(STC.Z-)
DELETE STC.{zowe.setup.security.stcs.zowe}.
F ACF2,REFRESH(STC)
*
* started task for ZIS
*
SET CONTROL(GSO)
DELETE STC.{zowe.setup.security.stcs.zis}.
F ACF2,REFRESH(STC)
*
* started task for ZIS Auxiliary server
*
SET CONTROL(GSO)
DELETE STC.{zowe.setup.security.stcs.aux}.
F ACF2,REFRESH(STC)
*
* Revoke access to ZIS
SET RESOURCE(FAC)
RECKEY ZWES DEL(IS ROLE({zowe.setup.security.groups.stc}) +
       SERVICE(READ) ALLOW)
F ACF2,REBUILD(FAC)
*
* Remove Zowe main server
*
SET RESOURCE(FAC)
RECKEY BPX DEL(DAEMON ROLE({zowe.setup.security.groups.stc}) +
       SERVICE(UPDATE) ALLOW)
RECKEY BPX DEL(SERVER ROLE({zowe.setup.security.groups.stc}) +
       SERVICE(UPDATE) ALLOW)
RECKEY BPX DEL(JOBNAME ROLE({zowe.setup.security.groups.stc}) +
       SERVICE(READ) ALLOW)
F ACF2,REBUILD(FAC)
SET RESOURCE(APL)
RECKEY OMVSAPPL DEL(SERVICE(READ) +
       ROLE({zowe.setup.security.groups.stc}) ALLOW)
F ACF2,REBUILD(APL)
* Remove UNI
*
SET RESOURCE(UNI)
DELETE SUPERUSER.FILESYS
*

F ACF2,REBUILD(UNI)

* Remove STCGRP role permission to use client certificate mapping
* service
SET RESOURCE(FAC)
RECKEY IRR DEL(RUSERMAP ROLE({zowe.setup.security.groups.stc}) +
       SERVICE(READ) ALLOW)
F ACF2,REBUILD(FAC)

* Remove STCGRP role permission to use distributed certificate mapping
* service
SET RESOURCE(FAC)
RECKEY IRR DEL(IDIDMAP.QUERY +
       ROLE({zowe.setup.security.groups.stc}) SERVICE(READ) ALLOW)
F ACF2,REBUILD(FAC)

* Remove STCGRP role permission to cut SMF records
SET RESOURCE(FAC)
RECKEY IRR DEL(RAUDITX ROLE({zowe.setup.security.groups.stc}) +
       SERVICE(READ) ALLOW)
F ACF2,REBUILD(FAC)

*  Remove  data set protection
SET RULE
LIST {zowe.setup.datasets.prefix}.
DELETE {zowe.setup.datasets.prefix}.
*

* Remove ZOWE resource class

* uncomment commands to below if the ZOWE class has been created
* by the ZWESECUR job

* remove key in ZWE resource type
* SET RESOURCE(ZWE)
* DELETE APIML
* remove ZOWE class mapping
* SET CONTROL(GSO)
* DELETE CLASMAP.ZOWE
$$
//*
//*********************************************************************
//*
//* Top Secret ONLY, customize to meet your system requirements
//*
//TSS      DD DATA,DLM=$$,SYMBOLS=JCLONLY

/* REMOVE ZOWE DATA SET PROTECTION ................................. */
/* removE general data set protection                                */
TSS WHOHAS DATASET({zowe.setup.datasets.prefix})
TSS REVOKE(ALL) DATASET({zowe.setup.datasets.prefix})
TSS REVOKE({zowe.setup.security.groups.sysProg}) +
    DATASET({zowe.setup.datasets.prefix})
TSS REMOVE(&ADMINDEP) DATASET({zowe.setup.datasets.prefix})

/* REMOVE ZOWE SERVER PERMISIONS ................................... */

/* remove permit to use ZIS                                          */
TSS WHOHAS IBMFAC(ZWES.IS)
TSS REVOKE({zowe.setup.security.users.zowe}) IBMFAC(ZWES.IS)

/* remove permit to create a user's security environment             */
TSS WHOHAS IBMFAC(BPX.DAEMON)
TSS REVOKE({zowe.setup.security.users.zowe}) IBMFAC(BPX.DAEMON)
TSS WHOHAS IBMFAC(BPX.SERVER)
TSS REVOKE({zowe.setup.security.users.zowe}) IBMFAC(BPX.SERVER)
TSS WHOHAS APPL(OMVSAPPL)
TSS REVOKE({zowe.setup.security.users.zowe}) APPL(OMVSAPPL)

/* remove permit to set jobname                                      */
TSS WHOHAS IBMFAC(BPX.JOBNAME)
TSS REVOKE({zowe.setup.security.users.zowe}) IBMFAC(BPX.JOBNAME)

/* remove permit to write persistent data                            */
TSS WHOHAS UNIXPRIV(SUPERUSER.FILESYS)
TSS REVOKE({zowe.setup.security.users.zowe}) +
    UNIXPRIV(SUPERUSER.FILESYS)

/* remove permit Zowe main server to use client certificate mapping  */
/* service                                                           */
TSS WHOHAS IBMFAC(IRR.RUSERMAP)
TSS REVOKE({zowe.setup.security.users.zowe}) IBMFAC(IRR.RUSERMAP)

/* remove permit Zowe main server to use distributed identity        */
/* mapping service                                                   */
TSS WHOHAS IBMFAC(IRR.IDIDMAP.QUERY)
TSS REVOKE({zowe.setup.security.users.zowe}) +
    IBMFAC(IRR.IDIDMAP.QUERY)

/* remove permit Zowe main server to cut SMF records                 */
TSS WHOHAS IBMFAC(IRR.RAUDITX)
TSS REVOKE({zowe.setup.security.users.zowe}) IBMFAC(IRR.RAUDITX)

/* REMOVE AUX SERVER PERMISIONS .................................... */

/* remove permit to use ZIS                                          */
TSS WHOHAS IBMFAC(ZWES.IS)
TSS REVOKE({zowe.setup.security.users.zis}) IBMFAC(ZWES.IS)

/* REMOVE STARTED TASKS ............................................ */

/* remove userid for ZOWE main server                                */
TSS LIST({zowe.setup.security.users.zowe})
TSS DELETE({zowe.setup.security.users.zowe})

/* remove userid for ZIS                                             */
TSS LIST({zowe.setup.security.users.zis})
TSS DELETE({zowe.setup.security.users.zis})

/* comment out if {zowe.setup.security.groups.stc} matches           */
/* {zowe.setup.security.groups.admin} (default), expect              */
/*   warning messages otherwise                                      */
/* remove group for started tasks                                    */
TSS LIST({zowe.setup.security.groups.stc})
TSS DELETE({zowe.setup.security.groups.stc})

/* remove started task for ZOWE main server                          */
TSS LIST(STC)
TSS REMOVE(STC) PROCNAME({zowe.setup.security.stcs.zowe})

/* remove started task for ZIS                                       */
TSS LIST(STC)
TSS REMOVE(STC) PROCNAME({zowe.setup.security.stcs.zis})

/* remove started task for ZIS Auxiliary server                      */
TSS LIST(STC)
TSS REMOVE(STC) PROCNAME({zowe.setup.security.stcs.aux})

/* REMOVE ADMINISTRATORS ........................................... */

/* uncomment to remove user IDs from                                 */
/* the {zowe.setup.security.groups.admin} group                      */
/* TSS REMOVE (userid) +                                             */
/*     GROUP({zowe.setup.security.groups.admin})                    */
/* remove group for administrators                                   */
TSS LIST({zowe.setup.security.groups.admin})
TSS DELETE({zowe.setup.security.groups.admin})

/* REMOVE ZOWE RESOURCE CLASS ...................................... */
/* uncomment commands to below if the ZOWE class has been created    */
/* by the ZWESECUR job                                               */

/* remove resource name in ZOWE class                                */
/* TSS REMOVE(&ZOWEDEP.) ZOWE(APIML.SERVICES)                        */
/* remove ZOWE class                                                 */
/* TSS REMOVE(RDT) RESCLASS(ZOWE)                                    */

/* ................................................................. */
/* only the last RC is returned, this command ensures it is a 0      */
PROFILE
$$
//*

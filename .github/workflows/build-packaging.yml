name: Build and Packaging Workflow
on:
  push:
    branches:
      - staging 
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      BUILD_SMPE:
        description: 'Build SMPE'
        required: false
        default: 'false'
      BUILD_PSIANDSMPE:
        description: 'Build PSI and SMPE'
        required: false
        default: 'false'
      BUILD_DOCKER:
        description: 'Build Docker'
        required: false
        default: 'false'
      BUILD_DOCKER_SOURCES:
        description: 'Build Docker sources'
        required: false
        default: 'false'
      BUILD_KUBERNETES:
        description: 'Build Kubernetes'
        required: false
        default: 'false'
      KEEP_TEMP_PAX_FOLDER:
        description: 'do we need to keep temp pax folder?'
        required: false
        default: 'false'

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          user: ${{ github.actor }}
          github-repo: ${{ github.repository }}
          github-user: ${{ secrets.ZOWE_ROBOT_USER }}
          github-passwd: ${{ secrets.ZOWE_ROBOT_TOKEN }}
  
  regular-build:
    runs-on: ubuntu-latest
    needs: check-permission
    steps: 
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2
  
      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}
      
      - name: '[Prep 3] Convert manifest template to manifest.json'
        run: |
          COMMIT_HASH=$(git rev-parse --verify HEAD)
          CURRENT_TIME=$(date +%s)
          if [ -z ${{ github.event.pull_request.number }} ]
          then
            CURRENT_BRANCH=${GITHUB_REF#refs/heads/} 
          else
            CURRENT_BRANCH=PR-${{ github.event.pull_request.number }}
          fi
          sed -e "s#{BUILD_BRANCH}#${CURRENT_BRANCH}#g" \
              -e "s#{BUILD_NUMBER}#${{ github.run_number }}#g" \
              -e "s#{BUILD_COMMIT_HASH}#${COMMIT_HASH}#g" \
              -e "s#{BUILD_TIMESTAMP}#${CURRENT_TIME}#g" \
              manifest.json.template > manifest.json
          
          echo "Current manifest.json is:"
          cat manifest.json

      - name: '[Prep 4] Prepare workflow'
        uses: zowe-actions/shared-actions/prepare-workflow@main
        with:
          package-name: org.zowe
          github-user: ${{ secrets.ZOWE_ROBOT_USER }}
          github-password: ${{ secrets.ZOWE_ROBOT_TOKEN }}
          github-email: ${{ secrets.ZOWE_ROBOT_EMAIL }}
          extra-init: |
            const fs = require('fs');
            var mjson = '${{ github.workspace }}/manifest.json';
            var _manifestObject = JSON.parse(fs.readFileSync(mjson));
            if (!_manifestObject || !_manifestObject['name'] || _manifestObject['name'] != 'Zowe' || !_manifestObject['version']) {
              console.error('Cannot read manifest or manifest is invalid.');
            }

      - name: '[Download 1] Downlaod from jfrog according to manifest'
        uses: zowe-actions/shared-actions/jfrog-download@main
        with:
          manifest-file-path: ${{ github.workspace }}/manifest.json
          default-target-path: .pax/content/zowe-${{ env.P_VERSION }}/files/
          expected-count: 28
        #env: 
        #  DEBUG: zowe-actions:shared-actions:jfrog-download
        
      # this step is not doing a publish, we are just utilizing this actions to get the PUBLISH_TARGET_PATH, 
      # and it will be used in the next step
      - name: '[Download 2] Get publish target path'
        if: github.event.inputs.BUILD_SMPE == 'true' || github.event.inputs.BUILD_PSIANDSMPE == 'true'
        uses: zowe-actions/shared-actions/publish@main
        with:
          perform-release: false

      - name: '[Download 2.1] Download SMPE build log'
        if: github.event.inputs.BUILD_SMPE == 'true' || github.event.inputs.BUILD_PSIANDSMPE == 'true'
        uses: zowe-actions/shared-actions/jfrog-download@main
        with:
          source-path-or-pattern: ${{ env.PUBLISH_TARGET_PATH }}smpe-build-logs-*.pax.Z
          default-target-path: .pax/content/smpe/
          extra-options: --flat=true --sort-by=created --sort-order=desc --limit=1
          bypass-validation: true

      - name: '[Pax 1] Make pax preparation (process some pax inputs)'
        id: pax-prep
        run: |
          if [ "${{ github.event.inputs.BUILD_SMPE }}" == "true" ] || [ "${{ github.event.inputs.BUILD_PSIANDSMPE }}" == "true" ] ; then
            echo ::set-output name=EXTRA_FILES::zowe-smpe.zip,fmid.zip,pd.htm,smpe-promote.tar,smpe-build-logs.pax.Z,rename-back.sh
            echo ::set-output name=BUILD_SMPE::yes
          else
            echo ::set-output name=EXTRA_FILES::
            echo ::set-output name=BUILD_SMPE::
          fi

          if [ "${{ github.event.inputs.BUILD_PSIANDSMPE }}" == "true" ] ; then
            echo ::set-output name=BUILD_PSI::yes
          else
            echo ::set-output name=BUILD_PSI::
          fi

          if [ "${{ github.event.inputs.KEEP_TEMP_PAX_FOLDER }}" == "true" ] ; then
            echo ::set-output name=KEEP_TEMP_FOLDER::yes
          else
            echo ::set-output name=KEEP_TEMP_FOLDER::
          fi

      - name: '[Pax 2] Make pax'
        timeout-minutes: 90
        uses: zowe-actions/shared-actions/make-pax@main
        with: 
          pax-name: zowe
          pax-options: '-o saveext'
          pax-ssh-username: ${{ secrets.SSH_MARIST_USERNAME }}
          pax-ssh-password: ${{ secrets.SSH_MARIST_PASSWORD }}
          keep-temp-folders: ${{ github.event.inputs.KEEP_TEMP_PAX_FOLDER }}
          extra-files: ${{ steps.pax-prep.outputs.EXTRA_FILES }}
          extra-environment-vars: |
            ZOWE_VERSION=${{ env.P_VERSION }}
            BUILD_SMPE=${{ steps.pax-prep.outputs.BUILD_SMPE }}
            BUILD_PSI=${{ steps.pax-prep.outputs.BUILD_PSI }}
            KEEP_TEMP_FOLDER=${{ steps.pax-prep.outputs.KEEP_TEMP_FOLDER }}

      - name: '[Pax 3] Post make pax'
        if: github.event.inputs.BUILD_SMPE == 'true' || github.event.inputs.BUILD_PSIANDSMPE == 'true'
        run: |
          cd .pax
          chmod +x rename-back.sh
          cat rename-back.sh
          ./rename-back.sh

      - name: '[Publish] Upload to artifactory'
        uses: zowe-actions/shared-actions/publish@main
        with:
          perform-release: false
          artifacts: |
            .pax/zowe.pax
            .pax/zowe-smpe.zip
            .pax/smpe-promote.tar
            .pax/pd.htm
            .pax/smpe-build-logs.pax.Z
            .pax/AZWE*
          

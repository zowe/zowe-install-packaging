---
# this playbook runs bin/zowe-setup-certificates.sh to setup certificates for Zowe in Keyring mode 
# FIXME: HOSTNAME should be combination of zowe_zos_host and zowe_external_domain_name.
#        The reason we use zowe_zos_host here is the certificates created here will only
#        be used by z/OS side. Docker image may use different certificate with it's
#        own zowe-setup-certificates.sh

- name: Validate that we were in keyring mode
  fail:
    msg: "Error. This play should only be run when in keyring mode"
  when: zos_keystore_mode is undefined or zos_keystore_mode != 'KEYSTORE_MODE_KEYRING'

- name: Prepare zowe-setup-keyring-certificates.env
  raw: >-
    cat "{{ zowe_root_dir }}/bin/zowe-setup-keyring-certificates.env" | \
    sed -e "s+^HOSTNAME=.*\$+HOSTNAME={{ zowe_zos_host }}+" | \
    sed -e "s+^IPADDRESS=.*\$+IPADDRESS={{ zowe_external_ip_address }}+" | \
    sed -e "s+^VERIFY_CERTIFICATES=.*\$+VERIFY_CERTIFICATES={{ zowe_apiml_verify_certficates_of_services|string|lower }}+" | \
    sed -e "s+^NONSTRICT_VERIFY_CERTIFICATES=.*\$+NONSTRICT_VERIFY_CERTIFICATES={{ zowe_apiml_nonstrict_verify_certficates_of_services|string|lower }}+" | \
    sed -e "s+^KEYSTORE_DIRECTORY=.*\$+KEYSTORE_DIRECTORY={{ zowe_keystore_dir }}+" | \
    sed -e "s+^ZOWE_CERTIFICATE_LABEL=.*\$+ZOWE_CERTIFICATE_LABEL={{ zowe_keyring_certname }}+" | \
    sed -e "s+^ZOWE_USER_ID=.*\$+ZOWE_USER_ID={{ zowe_runtime_user }}+" | \
    sed -e "s+^ZOWE_KEYRING=.*\$+ZOWE_KEYRING={{ zowe_keyring_alias }}+" \
    > "{{ work_dir_remote }}/zowe-setup-keyring-certificates.env"
  when: not zowe_apiml_security_x509_enabled

- name: Prepare zowe-setup-keyring-certificates.env
  raw: >-
    cat "{{ zowe_root_dir }}/bin/zowe-setup-keyring-certificates.env" | \
    sed -e "s+^HOSTNAME=.*\$+HOSTNAME={{ zowe_zos_host }}+" | \
    sed -e "s+^IPADDRESS=.*\$+IPADDRESS={{ zowe_external_ip_address }}+" | \
    sed -e "s+^VERIFY_CERTIFICATES=.*\$+VERIFY_CERTIFICATES={{ zowe_apiml_verify_certficates_of_services|string|lower }}+" | \
    sed -e "s+^NONSTRICT_VERIFY_CERTIFICATES=.*\$+NONSTRICT_VERIFY_CERTIFICATES={{ zowe_apiml_nonstrict_verify_certficates_of_services|string|lower }}+" | \
    sed -e "s+^KEYSTORE_DIRECTORY=.*\$+KEYSTORE_DIRECTORY={{ zowe_keystore_dir }}+" | \
    sed -e "s+^ZOWE_CERTIFICATE_LABEL=.*\$+ZOWE_CERTIFICATE_LABEL={{ zowe_keyring_certname }}+" | \
    sed -e "s+^ZOWE_USER_ID=.*\$+ZOWE_USER_ID={{ zowe_runtime_user }}+" | \
    sed -e "s+^ZOWE_KEYRING=.*\$+ZOWE_KEYRING={{ zowe_keyring_alias }}+" \
    > "{{ work_dir_remote }}/zowe-setup-keyring-certificates.env"
  when: zowe_apiml_security_x509_enabled

- name: Show zowe-setup-keyring-certificates.env
  raw: cat "{{ work_dir_remote }}/zowe-setup-keyring-certificates.env"

- name: Setup keyring certificates
  import_role:
    name: zos
    tasks_from: run_script
  vars:
    script_chdir: "{{ zowe_root_dir }}/bin"
    script_filename: ./zowe-setup-certificates.sh
    script_parameters: "-p \"{{ work_dir_remote }}/zowe-setup-keyring-certificates.env\"  -l \"{{ zowe_install_logs_dir }}\""

- name: List log dir
  raw: ls -l "{{ zowe_install_logs_dir }}"
  ignore_errors: True

- name: Show setup certificate log
  raw: find {{ zowe_install_logs_dir }} -name "zowe-setup-certificates-*.log" -type f | xargs -i sh -c 'echo ">>>>>>>>>>>>>>>>>>>>>>>> {} >>>>>>>>>>>>>>>>>>>>>>>" && cat {}'
  ignore_errors: True

- name: List certificates directory
  raw: ls -l "{{ zowe_keystore_dir }}"

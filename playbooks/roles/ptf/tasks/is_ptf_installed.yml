---
# Check if PTF is installed on the server
#
# input:
# - ptfs: required
# - smpe_csi: required
# - smpe_tzone: required
# - smpe_fmid: required
#
# output:
# - ptfs_existence

# ============================================================================
# check variables
- name: Check if ptfs has a value
  fail:
    msg: ptfs is required
  when: ptfs is not defined or ptfs is none or ptfs|length == 0

- import_role:
    name: common
    tasks_from: validate_variables
  vars:
    variable_list:
    - smpe_csi
    - smpe_tzone
    - smpe_fmid

- name: Init ptfs_existence
  set_fact:
    ptfs_existence: {}
- name: Init ptfs_existence
  set_fact:
    ptfs_existence: "{{ ptfs_existence | combine({ item: False }) }}"
  loop: "{{ ptfs }}"

# ============================================================================
# Prepare LSTFMID.jcl
- name: Prepare LSTFMID.jcl
  template:
    src: LSTFMID.jcl.j2
    dest: "{{ work_dir_local }}/{{ inventory_hostname }}/LSTFMID.jcl"
    newline_sequence: '\n'
    mode: 0700
  delegate_to: localhost

- name: Upload LSTFMID.jcl to server
  include_role:
    name: common
    tasks_from: upload_file
  vars:
    filename_to_upload: "LSTFMID.jcl"
    file_upload_method: scp
    file_upload_hashcheck: false

- name: Convert ascii to ebcdic
  when: convert_upload|default(False)
  raw: iconv -f ISO8859-1 -t IBM-1047 "{{ work_dir_remote }}/LSTFMID.jcl" > "{{ work_dir_remote }}/LSTFMID.jcl.ebcdic" && mv  "{{ work_dir_remote }}/LSTFMID.jcl.ebcdic"  "{{ work_dir_remote }}/LSTFMID.jcl"

# ============================================================================
# Run LSTFMID.jcl
- name: Run LSTFMID.jcl
  include_role:
    name: zos
    tasks_from: run_jcl
  vars:
    jcl_filename: "{{ work_dir_remote }}/LSTFMID.jcl"

# ============================================================================
# Check response
- name: Check if PTF is installed 
  set_fact:
    ptfs_existence: "{{ ptfs_existence | combine({ item: True }) }}"
  when: jcl_job_log is regex("" + item + "\\s+TYPE\\s+=\\s+PTF")
  loop: "{{ ptfs }}"

- name: Show ptfs_existence
  debug:
    var: ptfs_existence

---
# Delete acf Keyrings and certificates we've created
# ============================================================================

# build up jcl as we go then run at the end

- name: Remove ACFNOKYR.jcl if exists
  raw: rm -f "{{ work_dir_remote }}/ACFNOKYR.jcl"

- name: create initial ACFNOKYR.jcl
  raw: echo "//ACFNOKYR JOB\n//RUN      EXEC PGM=IKJEFT01,REGION=0M\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DDNAME=ACF2\n//ACF2     DD DATA,DLM=\$\$,SYMBOLS=JCLONLY\nACF\n  SET PROFILE(USER) DIVISION(CERTDATA)" > "{{ work_dir_remote }}/ACFNOKYR.jcl"

- name: Add remove Zowe ACF2 personal certficates statement(s) to JCL
  raw: echo "  DELETE {{ zowe_runtime_user }}.{{ item}}" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"
  loop: "{{ zowe_known_keyring_personal_digicerts }}"

- name: Add remove Zowe ACF2 personal certficates statement(s) to JCL
  raw: echo "  DELETE {{ zowe_runtime_user }}" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"

- name: Add remove Zowe ACF2 certauth certficates statement(s) to JCL
  raw: echo "  DELETE CERTAUTH.{{ item}}" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"
  loop: "{{ zowe_known_keyring_certauth_digicerts }}"

- name: Add set keyring division ACF2 statement to JCL
  raw: echo "  SET PROFILE(USER) DIVISION(KEYRING)" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"

- name: Add delete Zowe ACF2 keyrings statement(s) to JCL
  raw: echo "  DELETE {{ zowe_runtime_user }}.{{ item}}" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"
  loop: "{{ zowe_known_tss_keyring_names }}"
  ignore_errors: True

- name: Add full cleanup statement(s) to JCL
  raw: echo "  DELETE {{ zowe_runtime_user }}" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"
  ignore_errors: True

- name: finalise ACFNOKYR.jcl
  raw: echo "\n  F ACF2,REBUILD(FAC)\n\n* List the keyring ................................................\n  SET PROFILE(USER) DIVISION(KEYRING)\n  LIST {{ zowe_runtime_user }}.ZOWERING\n\nEND\n\$\$" >> "{{ work_dir_remote }}/ACFNOKYR.jcl"

- name: Print ACFNOKYR.jcl
  raw: cat "{{ work_dir_remote }}/ACFNOKYR.jcl"

- name: Run ACFNOKYR.jcl
  import_role:
    name: zos
    tasks_from: run_jcl
  vars:
    jcl_filename: "{{ work_dir_remote }}/ACFNOKYR.jcl"

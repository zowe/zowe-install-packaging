---
# install zowe convenience build
# the build should have been uploaded to "{{ work_dir_remote }}/{{ zowe_build_file }}"
# ============================================================================
- import_role:
    name: common
    tasks_from: validate_variables
  vars:
    variable_list:
    - work_dir_remote
    - zowe_root_dir
    - zowe_dataset_prefix

- name: Check if Zowe build has been uploaded
  raw: test -f '{{ work_dir_remote }}/{{ zowe_build_file }}'

- name: Extract Zowe
  raw: >-
    rm -fr "{{ zowe_root_dir }}" && \
    mkdir -p "{{ zowe_root_dir }}" && \
    cd "{{ zowe_root_dir }}" && \
    pax -ppx -rf '{{ work_dir_remote }}/{{ zowe_build_file }}' && \
    echo "Content of {{ zowe_root_dir }} after extracted" && \
    ls -laT

- name: Show Zowe manifest
  raw: cat "{{ zowe_root_dir }}/manifest.json"

- name: Initialize zowe.yaml
  raw: >-
    mkdir -p "{{ zowe_instance_dir }}" && \
    chmod 777 "{{ zowe_instance_dir }}" && \
    cp "{{ zowe_root_dir }}/example-zowe.yaml" "{{ zowe_instance_dir }}/zowe.yaml"

- name: Update zowe.yaml zowe.setup.dataset.prefix
  include_role:
    name: zos
    tasks_from: update_zowe_yaml
  vars:
    configs:
      "zowe.setup.dataset.prefix": "{{ zowe_dataset_prefix }}"

- name: Install Zowe
  include_role:
    name: zos
    tasks_from: run_zwe
  vars:
    parameters: "install -l \"{{ zowe_install_logs_dir }}\""

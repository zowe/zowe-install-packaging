Migrate your YAML configuration on z/OS for Kubernetes.

This script will create `zowe-config` `ConfigMap` and `zowe-certificates-secret` `Secret`
for Kubernetes deployment.

To manually create `zowe-config` `ConfigMap`, the `data` section should contain
a key `zowe.yaml` with string value of your `zowe.yaml` used on z/OS.

To manually create `zowe-certificates-secret` `Secret`, you need 2 entries under
`data` section:

- `keystore.p12`: which is base64 encoded PKCS#12 keystore,
- `truststore.p12`: which is base64 encoded PKCS#12 truststore.

And 3 entries under `stringData` section:

- `keystore.key`: is the PEM format of certificate private key,
- `keystore.cer`: is the PEM format of the certificate,
- `ca.cer`: is the PEM format of the certificate authority.

In order to make certificates working in Kubernetes, the certificate you are using should
have these domains defined in certificate Subject Alt Name (SAN):

- your external domains to access Zowe APIML Gateway Service running in Kubernetes cluster,
- `*.[k8s-namespace].svc.[k8s-cluster-name]`
- `*.discovery-service.[k8s-namespace].svc.[k8s-cluster-name]`
- `*.gateway-service.[k8s-namespace].svc.[k8s-cluster-name]`
- `*.[k8s-namespace].pod.[k8s-cluster-name]`

`[k8s-namespace]` is the Kubernetes Namespace you installed Zowe into. And
`[k8s-cluster-name]` is the Kubernetes cluster name, which usually should be
`cluster.local`.

Without the additional domains in SAN, you may see warnings/errors related to certificate
validation.

If you cannot add those domains into certificate Subject Alt Name (SAN), you can change
`zowe.verifyCertificates` to `NONSTRICT` mode. Zowe components will not validate domain
names but will continue to validate certificate chain, validity and whether it's trusted
in Zowe truststore.

**IMPORTANT**: It's not recommended to disable `zowe.verifyCertificates`.

**NOTES**: With below conditions, this migration script will re-generate a new
set of certificate for you with proper domain names listed above.

- you use `zwe init` command to initialize Zowe,
- use `PKCS#12` format keystore by defining `zowe.setup.certificate.type: PKCS12`
- did not define `zowe.setup.certificate.pkcs12.import.keystore` and let `zwe` command
  to generate PKCS12 keystore for you
- enabled `STRICT` mode `zowe.verifyCertificates`.
